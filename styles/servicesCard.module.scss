@import "./globals.scss";

.card {
  position: relative;
  overflow: hidden;
  border-radius: 0.2rem;
  flex: 1;
  min-height: 300px;
  max-width: 400px;
  min-width: 300px;
  cursor: pointer;

  // Add touch-action to allow native touch behavior
  touch-action: manipulation;

  @include desktop {
    max-width: 300px;
    min-width: 250px;
    min-height: 250px;
  }
  @include tablet {
    place-self: center;
    min-height: 300px;
    max-width: 400px;
    min-width: 300px;
  }
  @include phoneLandscape {
    place-self: center;
    max-width: 250px;
    min-width: 250px;
    min-height: 250px;
  }
}

.cardImage {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: $cardBGC;
  color: $offWhite;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 0.5rem 1rem;
  transform: translateY(0);
  transition: transform 0.5s ease;

  // Combine hover and focus states
  .card:hover &,
  .card:focus &,
  .card:focus-within &,
  .card:active & {
    transform: translateY(-100%);
  }

  // Add specific touch handling for mobile
  @media (hover: none) {
    .card:active & {
      transform: translateY(-100%);
    }
  }

  h3 {
    font-size: 1rem;
    text-align: center;
    letter-spacing: 1px;
    line-height: 1.5rem;
    margin-top: 1.5rem;
    max-width: 80%;
  }

  img {
    z-index: 3;
  }

  &::before {
    content: "";
    position: absolute;
    top: -25%;
    left: 25%;
    width: 50%;
    height: 50%;
    background-color: $cardBGC;
    filter: brightness(1.1);
    border-radius: 50%;
  }

  @include phone {
    transition: all 1s ease-in-out;
  }
  @include phoneLandscape {
    transition: all 1s ease-in-out;
  }
}

.cardContent {
  display: flex;
  flex-direction: column;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: $theme;
  color: $offWhite;
  padding: 1rem;
  transform: translateY(100%);
  transition: transform 0.5s ease;
  overflow: hidden;

  // Combine hover and focus states
  .card:hover &,
  .card:focus &,
  .card:focus-within &,
  .card:active & {
    transform: translateY(0);
  }

  // Add specific touch handling for mobile
  @media (hover: none) {
    .card:active & {
      transform: translateY(0);
    }
  }

  h4 {
    font-size: 1rem;
    font-weight: 900;
    margin-bottom: 0.8rem;
    letter-spacing: 1px;
    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
  }

  ul {
    list-style-type: none;
    padding: 0;
    margin: 0 0 1rem 0;
  }

  li {
    margin-bottom: 0.5rem;
    list-style-type: disc;
    margin-left: 1rem;
    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
    font-size: 1rem;
  }

  a {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: $offWhite;
    text-decoration: none;
    border: 1px solid $offWhite;
    padding: 0.5rem 1rem;
    border-radius: 0.2rem;
    transition: all 0.3s ease;
    margin: auto 0 0 auto;
    width: fit-content;

    // Make sure the link is always clickable on touch devices
    position: relative;
    z-index: 2;

    &:hover {
      background-color: $theme;
      filter: brightness(1.3);
      transform: scale(1.1);
    }

    @include phone {
      transition: all 1s ease-in-out;
    }
    @include phoneLandscape {
      transition: all 1s ease-in-out;
    }
  }

  &::before {
    content: "";
    position: absolute;
    top: -25%;
    left: 25%;
    width: 50%;
    height: 50%;
    background-color: $theme;
    filter: brightness(1.3);
    border-radius: 50%;
    z-index: -1;
  }
}

.contactCardWrapper {
  display: flex;
  justify-content: space-around;
  padding: 6rem 0;
  flex-wrap: wrap;
  gap: 1rem;
}

.contentAlt {
  padding: 2rem;
  align-items: center;
  text-align: center;
  a {
    margin: 2rem auto 1rem auto;
  }
}
// New classes for intersection observer
@include phoneLandscape {
  .inViewImage {
    transform: translateY(-100%) !important;
  }

  .inViewContent {
    transform: translateY(0) !important;
  }

  // Media query for touch devices
  @media (hover: none) {
    .card .cardImage.inViewImage {
      transform: translateY(-100%) !important;
    }

    .card .cardContent.inViewContent {
      transform: translateY(0) !important;
    }
  }
}

@include phone {
  .inViewImage {
    transform: translateY(-100%) !important;
  }

  .inViewContent {
    transform: translateY(0) !important;
  }

  // Media query for touch devices
  @media (hover: none) {
    .card .cardImage.inViewImage {
      transform: translateY(-100%) !important;
    }

    .card .cardContent.inViewContent {
      transform: translateY(0) !important;
    }
  }
}
