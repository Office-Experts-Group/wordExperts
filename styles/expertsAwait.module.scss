@import "./globals.scss";

.expertsAwait {
  scroll-margin-top: 125px;
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 4rem;
  padding: 8rem;
  @include phone {
    padding: 4rem 1rem;
    text-align: center;
  }
  @include phoneLandscape {
    padding: 4rem 1rem;
  }
  @include tablet {
    padding: 4rem;
  }
}

.bgImgWrapper {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  overflow: hidden;
}

.bgImg {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.content {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 6rem;

  h2 {
    color: $offWhite;
    font-size: clamp(2rem, 5vw, 4rem);
    margin: 2rem 0 1rem 0;
  }

  @include phone {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  @include phoneLandscape {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  @include tablet {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  @include desktop {
    gap: 2rem;
  }
}

.bar {
  border-bottom: 6px solid $theme;
  width: fit-content;
  margin-left: 0.5rem;

  p {
    font-weight: 500;
    color: $offWhite;
    margin: 0 0 -0.5rem 0;
  }
}

.text {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2rem;
  p {
    color: $grayText;
    text-align: center;
    line-height: 2.5rem;
    font-size: 1.125rem;
    margin-top: 0.5rem;

    // &:first-of-type {
    //   @media screen and (min-width: "1024px") {
    //     margin-top: 4.5rem;
    //   }
    // }
  }
}

.center {
  place-self: center;
}

.link {
  p,
  a {
    color: $offWhite;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    width: 240px;
  }

  p {
    margin-top: 0rem;
  }

  svg {
    height: 45px;
    width: 45px;
  }
  &:hover p {
    color: $theme;
  }
  @media screen and (min-width: "1024px") {
    margin-bottom: 1rem;
  }
}

// Cards
.cards {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  gap: 2rem;
}

.card {
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border-radius: 0.2rem;
  background-color: $cardBGC;
  padding: 3rem;
  transition: background-color 0.3s ease;
  width: 20vw;
  min-width: 200px;
  max-width: 280px;
  height: 220px;

  @include phone {
    place-self: center;
    margin: 0 auto;
    width: 85%;
    max-width: 85%;
  }
  @include phoneLandscape {
    place-self: center;
    margin: 0 auto;
    width: 85%;
    max-width: 85%;
  }
  @include tablet {
    place-self: center;
    margin: 0 auto;
    width: 85%;
    max-width: 85%;
  }

  .imageWrapper {
    z-index: 2;
    transition: transform 0.3s ease;

    img {
      z-index: 2;
      transition: filter 0.3s ease-in-out;
      will-change: filter;
      backface-visibility: hidden;
      -webkit-backface-visibility: hidden;
      transform: translateZ(0);
      -webkit-transform: translateZ(0);
    }
  }

  p {
    color: $offWhite;
    text-align: center;
    font-weight: 700;
    letter-spacing: 1px;
    z-index: 2;
    margin-top: 1rem;
    transition: color 0.3s ease;
  }

  &::before {
    content: "";
    position: absolute;
    top: -25%;
    left: 25%;
    width: 50%;
    height: 50%;
    background-color: $cardBGC;
    filter: brightness(1.2);
    border-radius: 50%;
    transition: background-color 0.3s ease;
  }

  // Desktop hover effects
  @media (hover: hover) {
    &:hover {
      background-color: $theme;

      .imageWrapper {
        animation: bounce 1.2s cubic-bezier(0.28, 0.84, 0.42, 1);

        img {
          filter: brightness(0) invert(1);
        }
      }

      p {
        color: $offWhite;
      }

      &::before {
        background-color: $theme;
        filter: brightness(1.2);
      }
    }
  }

  // Mobile intersection observer effects
  @include phone {
    &[data-intersecting="true"] {
      background-color: $theme !important;

      .imageWrapper {
        animation: bounce 1.2s cubic-bezier(0.28, 0.84, 0.42, 1);

        img {
          filter: brightness(0) invert(1) !important;
        }
      }

      p {
        color: $offWhite !important;
      }

      &::before {
        background-color: $theme !important;
        filter: brightness(1.2);
      }
    }
  }

  @include phoneLandscape {
    &[data-intersecting="true"] {
      background-color: $theme !important;

      .imageWrapper {
        animation: bounce 1.2s cubic-bezier(0.28, 0.84, 0.42, 1);

        img {
          filter: brightness(0) invert(1) !important;
        }
      }

      p {
        color: $offWhite !important;
      }

      &::before {
        background-color: $theme !important;
        filter: brightness(1.2);
      }
    }
  }
}

@keyframes bounce {
  0% {
    transform: translateY(0);
  }
  15% {
    transform: translateY(5px);
  }
  33% {
    transform: translateY(-15px);
  }
  48% {
    transform: translateY(0);
  }
  66% {
    transform: translateY(-5px);
  }
  81% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(0);
  }
}

// Black Segment ****************************************************
.points {
  display: flex;
  flex-direction: column;
  margin: 0 auto;
  gap: 1rem;
  max-width: 60%;
  @include phone {
    max-width: 90%;
  }
  @include phoneLandscape {
    max-width: 90%;
  }
  @include tablet {
    max-width: 80%;
  }
}

.point {
  display: flex;
  align-items: center;
  gap: 2rem;
  color: $darkGrayText;
  font-size: 1.125rem;
  line-height: 2rem;
}

.centerText {
  @include phoneLandscape {
    text-align: center;
    width: 100%;
  }
  @include phone {
    text-align: center;
    width: 100%;
  }
}

.hidden {
  @include phone {
    display: none;
  }

  @include phoneLandscape {
    display: none;
  }
}

.marginText {
  @media screen and (min-width: 1200px) {
    margin-top: 4rem;
  }
}

.cross {
  height: 30px;
  width: 30px;
  min-width: 30px;
  background-color: rgb(202, 13, 13);
  border: 1px solid rgb(202, 13, 13);
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: all 0.5s ease;
  color: $offWhite;
  svg {
    stroke: $offWhite;
    color: $offWhite;
  }
  &:hover {
    transition: all 0.5s ease;
    background-color: $offWhite;
    svg {
      stroke: $theme;
      color: $theme;
    }
  }
  p {
    margin: 0 !important;
  }
}
